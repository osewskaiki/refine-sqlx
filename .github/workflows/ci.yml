name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 22]
        database: [sqlite, mysql, postgresql]

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: bun install

      - name: Type check
        run: bun run typecheck

      - name: Build packages
        run: bun run build

      - name: Run unit tests
        run: bun run test

      - name: Run integration tests - SQLite
        if: matrix.database == 'sqlite'
        run: |
          bun run test:integration-bun
          bun run test:integration-better-sqlite3

      - name: Run integration tests - MySQL
        if: matrix.database == 'mysql'
        env:
          MYSQL_URL: mysql://root:password@localhost:3306/testdb
        run: bun run test:integration-mysql

      - name: Run integration tests - PostgreSQL
        if: matrix.database == 'postgresql'
        env:
          POSTGRES_URL: postgresql://postgres:password@localhost:5432/testdb
        run: bun run test:integration-postgresql

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Check formatting
        run: bun run format --check

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build packages
        run: bun run build

      - name: Test package builds
        run: |
          cd packages/refine-orm && npm pack --dry-run
          cd ../refine-sqlx && npm pack --dry-run
          cd ../refine-core-utils && npm pack --dry-run

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: |
            packages/*/dist/
          retention-days: 7
