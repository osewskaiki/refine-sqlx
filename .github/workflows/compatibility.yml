name: Node.js Compatibility Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  compatibility:
    name: Node.js ${{ matrix.node-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x, 22.x]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run TypeScript type checking
        run: npm run typecheck

      - name: Build packages
        run: npm run build

      - name: Run unit tests
        run: npm run test

      - name: Check package size limits
        run: npx size-limit

      - name: Verify ESM/CJS compatibility
        run: |
          # Test ESM import
          node -e "import('./packages/refine-orm/dist/index.mjs').then(() => console.log('ESM import works'))"
          # Test CJS require
          node -e "const pkg = require('./packages/refine-orm/dist/index.cjs'); console.log('CJS require works')"

  bun-compatibility:
    name: Bun compatibility
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run TypeScript type checking
        run: bun run typecheck

      - name: Build packages
        run: bun run build

      - name: Run unit tests
        run: bun run test

      - name: Test Bun-specific features
        run: bun run test:integration-bun
